import{E as J}from"./eventemitter3-DVaOc9f-.js";import{c as $,C as Z}from"./@wagmi-C5QSfTkI.js";import{g as T,u as F,v as X,I as Y,x as P,y as v,B as E,z as _,A as Q,D as ee,E as te,F as ne,i as ie,G as ae,H as se,J as V,p as re,K as oe,L as z,M as ue,k as ce,j as pe,N as le,O as de,P as ye,Q as me,T as he,V as fe,c as ge,W as be,X as Te,Y as we,Z as Se,_ as Pe,$ as ve,b as Ie,S as R,U as N}from"./viem-B4i6e-Ob.js";const p={rpc:{invalidInput:-32e3,resourceNotFound:-32001,resourceUnavailable:-32002,transactionRejected:-32003,methodNotSupported:-32004,limitExceeded:-32005,parse:-32700,invalidRequest:-32600,methodNotFound:-32601,invalidParams:-32602,internal:-32603},provider:{userRejectedRequest:4001,unauthorized:4100,unsupportedMethod:4200,disconnected:4900,chainDisconnected:4901,unsupportedChain:4902}},L={"-32700":{standard:"JSON RPC 2.0",message:"Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text."},"-32600":{standard:"JSON RPC 2.0",message:"The JSON sent is not a valid Request object."},"-32601":{standard:"JSON RPC 2.0",message:"The method does not exist / is not available."},"-32602":{standard:"JSON RPC 2.0",message:"Invalid method parameter(s)."},"-32603":{standard:"JSON RPC 2.0",message:"Internal JSON-RPC error."},"-32000":{standard:"EIP-1474",message:"Invalid input."},"-32001":{standard:"EIP-1474",message:"Resource not found."},"-32002":{standard:"EIP-1474",message:"Resource unavailable."},"-32003":{standard:"EIP-1474",message:"Transaction rejected."},"-32004":{standard:"EIP-1474",message:"Method not supported."},"-32005":{standard:"EIP-1474",message:"Request limit exceeded."},4001:{standard:"EIP-1193",message:"User rejected the request."},4100:{standard:"EIP-1193",message:"The requested account and/or method has not been authorized by the user."},4200:{standard:"EIP-1193",message:"The requested method is not supported by this Ethereum provider."},4900:{standard:"EIP-1193",message:"The provider is disconnected from all chains."},4901:{standard:"EIP-1193",message:"The provider is disconnected from the specified chain."},4902:{standard:"EIP-3085",message:"Unrecognized chain ID."}},q="Unspecified error message.",Ee="Unspecified server error.";function O(e,t=q){if(e&&Number.isInteger(e)){const n=e.toString();if(C(L,n))return L[n].message;if(G(e))return Ee}return t}function Le(e){if(!Number.isInteger(e))return!1;const t=e.toString();return!!(L[t]||G(e))}function Ce(e,{shouldIncludeStack:t=!1}={}){const n={};if(e&&typeof e=="object"&&!Array.isArray(e)&&C(e,"code")&&Le(e.code)){const i=e;n.code=i.code,i.message&&typeof i.message=="string"?(n.message=i.message,C(i,"data")&&(n.data=i.data)):(n.message=O(n.code),n.data={originalError:U(e)})}else n.code=p.rpc.internal,n.message=D(e,"message")?e.message:q,n.data={originalError:U(e)};return t&&(n.stack=D(e,"stack")?e.stack:void 0),n}function G(e){return e>=-32099&&e<=-32e3}function U(e){return e&&typeof e=="object"&&!Array.isArray(e)?Object.assign({},e):e}function C(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function D(e,t){return typeof e=="object"&&e!==null&&t in e&&typeof e[t]=="string"}const g={rpc:{parse:e=>d(p.rpc.parse,e),invalidRequest:e=>d(p.rpc.invalidRequest,e),invalidParams:e=>d(p.rpc.invalidParams,e),methodNotFound:e=>d(p.rpc.methodNotFound,e),internal:e=>d(p.rpc.internal,e),server:e=>{if(!e||typeof e!="object"||Array.isArray(e))throw new Error("Ethereum RPC Server errors must provide single object argument.");const{code:t}=e;if(!Number.isInteger(t)||t>-32005||t<-32099)throw new Error('"code" must be an integer such that: -32099 <= code <= -32005');return d(t,e)},invalidInput:e=>d(p.rpc.invalidInput,e),resourceNotFound:e=>d(p.rpc.resourceNotFound,e),resourceUnavailable:e=>d(p.rpc.resourceUnavailable,e),transactionRejected:e=>d(p.rpc.transactionRejected,e),methodNotSupported:e=>d(p.rpc.methodNotSupported,e),limitExceeded:e=>d(p.rpc.limitExceeded,e)},provider:{userRejectedRequest:e=>f(p.provider.userRejectedRequest,e),unauthorized:e=>f(p.provider.unauthorized,e),unsupportedMethod:e=>f(p.provider.unsupportedMethod,e),disconnected:e=>f(p.provider.disconnected,e),chainDisconnected:e=>f(p.provider.chainDisconnected,e),unsupportedChain:e=>f(p.provider.unsupportedChain,e),custom:e=>{if(!e||typeof e!="object"||Array.isArray(e))throw new Error("Ethereum Provider custom errors must provide single object argument.");const{code:t,message:n,data:i}=e;if(!n||typeof n!="string")throw new Error('"message" must be a nonempty string');return new x(t,n,i)}}};function d(e,t){const[n,i]=H(t);return new K(e,n||O(e),i)}function f(e,t){const[n,i]=H(t);return new x(e,n||O(e),i)}function H(e){if(e){if(typeof e=="string")return[e];if(typeof e=="object"&&!Array.isArray(e)){const{message:t,data:n}=e;if(t&&typeof t!="string")throw new Error("Must specify string message.");return[t||void 0,n]}}return[]}class K extends Error{constructor(t,n,i){if(!Number.isInteger(t))throw new Error('"code" must be an integer.');if(!n||typeof n!="string")throw new Error('"message" must be a nonempty string.');super(n),Object.defineProperty(this,"code",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"data",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.code=t,i!==void 0&&(this.data=i)}}class x extends K{constructor(t,n,i){if(!Ae(t))throw new Error('"code" must be an integer such that: 1000 <= code <= 4999');super(t,n,i)}}function Ae(e){return Number.isInteger(e)&&e>=1e3&&e<=4999}const _e="0.0.1";function Oe(e,t){const n=Ce(Re(e),{shouldIncludeStack:!0}),i=new URL("https://docs.zksync.io/zksync-account-sdk/docs/errors");i.searchParams.set("version",_e),i.searchParams.set("code",n.code.toString());const a=Ne(n.data,t);return a&&i.searchParams.set("method",a),i.searchParams.set("message",n.message),{...n,docUrl:i.href}}function xe(e){return e.errorMessage!==void 0}function Re(e){return typeof e=="string"?{message:e,code:p.rpc.internal}:xe(e)?{...e,message:e.errorMessage,code:e.errorCode,data:{method:e.method}}:e}function Ne(e,t){const n=e==null?void 0:e.method;if(n)return n;if(t!==void 0){if(typeof t=="string")return t;if(Array.isArray(t)){if(t.length>0)return t[0].method}else return t.method}}class Ue{constructor(t){Object.defineProperty(this,"url",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"popup",{enumerable:!0,configurable:!0,writable:!0,value:null}),Object.defineProperty(this,"listeners",{enumerable:!0,configurable:!0,writable:!0,value:new Map}),Object.defineProperty(this,"postMessage",{enumerable:!0,configurable:!0,writable:!0,value:async n=>{(await this.waitForPopupLoaded()).postMessage(n,this.url.origin)}}),Object.defineProperty(this,"postRequestAndWaitForResponse",{enumerable:!0,configurable:!0,writable:!0,value:async n=>{const i=this.onMessage(({requestId:a})=>a===n.id);return this.postMessage(n),await i}}),Object.defineProperty(this,"onMessage",{enumerable:!0,configurable:!0,writable:!0,value:async n=>new Promise((i,a)=>{const s=u=>{if(u.origin!==this.url.origin)return;const r=u.data;n(r)&&(i(r),window.removeEventListener("message",s),this.listeners.delete(s))};window.addEventListener("message",s),this.listeners.set(s,{reject:a})})}),Object.defineProperty(this,"disconnect",{enumerable:!0,configurable:!0,writable:!0,value:()=>{try{this.popup&&!this.popup.closed&&this.popup.close()}catch(n){console.warn("Failed to close popup",n)}this.popup=null,this.listeners.forEach(({reject:n},i)=>{n(g.provider.userRejectedRequest("Request rejected")),window.removeEventListener("message",i)}),this.listeners.clear()}}),Object.defineProperty(this,"openPopup",{enumerable:!0,configurable:!0,writable:!0,value:()=>{const a=new URL(this.url.toString());a.searchParams.set("origin",window.location.origin);const s=(window.innerWidth-420)/2+window.screenX,u=(window.innerHeight-600)/2+window.screenY,r=window.open(a,"ZKsync SSO",`width=420, height=600, left=${s}, top=${u}`);if(!r)throw g.rpc.internal("Pop up window failed to open");return r.focus(),r}}),Object.defineProperty(this,"waitForPopupLoaded",{enumerable:!0,configurable:!0,writable:!0,value:async()=>this.popup&&!this.popup.closed?(this.popup.focus(),this.popup):(this.popup=this.openPopup(),this.onMessage(({event:n})=>n==="PopupUnload").then(this.disconnect).catch(()=>{}),this.onMessage(({event:n})=>n==="PopupLoaded").then(()=>{if(!this.popup)throw g.rpc.internal();return this.popup}))}),Object.defineProperty(this,"ready",{enumerable:!0,configurable:!0,writable:!0,value:async()=>{await this.waitForPopupLoaded()}}),this.url=new URL(t)}}function De(){const e=document.title;if(!e)return null;const t=[" - "," | "," : "," · "," — "];for(const n of t){const i=e.split(n);if(i.length>1)return i[0].trim()}return e.trim()}function Me(){const e=document.querySelector('link[sizes="192x192"], link[sizes="180x180"], link[rel="icon"], link[rel="shortcut icon"]'),t=e==null?void 0:e.getAttribute("href");if(!t)return null;try{const n=new URL(t,document.location.href);return n.protocol!=="https:"&&n.protocol!=="http:"?null:n.href}catch{return null}}const je=[{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"ADDRESS_CAST_OVERFLOW",type:"error"},{inputs:[{internalType:"bytes",name:"input",type:"bytes"}],name:"INVALID_PAYMASTER_INPUT",type:"error"},{inputs:[{internalType:"address",name:"notInitialized",type:"address"}],name:"NOT_FROM_INITIALIZED_ACCOUNT",type:"error"},{inputs:[{internalType:"uint256",name:"chainId",type:"uint256"}],name:"NO_TIMESTAMP_ASSERTER",type:"error"},{inputs:[{internalType:"uint256",name:"allowance",type:"uint256"},{internalType:"uint256",name:"maxAllowance",type:"uint256"},{internalType:"uint64",name:"period",type:"uint64"}],name:"SESSION_ALLOWANCE_EXCEEDED",type:"error"},{inputs:[{internalType:"bytes32",name:"sessionHash",type:"bytes32"}],name:"SESSION_ALREADY_EXISTS",type:"error"},{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"SESSION_CALL_POLICY_VIOLATED",type:"error"},{inputs:[{internalType:"bytes32",name:"param",type:"bytes32"},{internalType:"bytes32",name:"refValue",type:"bytes32"},{internalType:"uint8",name:"condition",type:"uint8"}],name:"SESSION_CONDITION_FAILED",type:"error"},{inputs:[{internalType:"uint256",name:"expiresAt",type:"uint256"}],name:"SESSION_EXPIRES_TOO_SOON",type:"error"},{inputs:[{internalType:"uint256",name:"actualLength",type:"uint256"},{internalType:"uint256",name:"expectedMinimumLength",type:"uint256"}],name:"SESSION_INVALID_DATA_LENGTH",type:"error"},{inputs:[{internalType:"address",name:"recovered",type:"address"},{internalType:"address",name:"expected",type:"address"}],name:"SESSION_INVALID_SIGNER",type:"error"},{inputs:[{internalType:"uint256",name:"lifetimeUsage",type:"uint256"},{internalType:"uint256",name:"maxUsage",type:"uint256"}],name:"SESSION_LIFETIME_USAGE_EXCEEDED",type:"error"},{inputs:[{internalType:"uint256",name:"usedValue",type:"uint256"},{internalType:"uint256",name:"maxValuePerUse",type:"uint256"}],name:"SESSION_MAX_VALUE_EXCEEDED",type:"error"},{inputs:[],name:"SESSION_NOT_ACTIVE",type:"error"},{inputs:[{internalType:"address",name:"target",type:"address"}],name:"SESSION_TRANSFER_POLICY_VIOLATED",type:"error"},{inputs:[],name:"SESSION_UNLIMITED_FEES",type:"error"},{inputs:[],name:"SESSION_ZERO_SIGNER",type:"error"},{inputs:[{internalType:"uint256",name:"openSessions",type:"uint256"}],name:"UNINSTALL_WITH_OPEN_SESSIONS",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"bytes32",name:"sessionHash",type:"bytes32"},{components:[{internalType:"address",name:"signer",type:"address"},{internalType:"uint256",name:"expiresAt",type:"uint256"},{components:[{internalType:"enum SessionLib.LimitType",name:"limitType",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"period",type:"uint256"}],internalType:"struct SessionLib.UsageLimit",name:"feeLimit",type:"tuple"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes4",name:"selector",type:"bytes4"},{internalType:"uint256",name:"maxValuePerUse",type:"uint256"},{components:[{internalType:"enum SessionLib.LimitType",name:"limitType",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"period",type:"uint256"}],internalType:"struct SessionLib.UsageLimit",name:"valueLimit",type:"tuple"},{components:[{internalType:"enum SessionLib.Condition",name:"condition",type:"uint8"},{internalType:"uint64",name:"index",type:"uint64"},{internalType:"bytes32",name:"refValue",type:"bytes32"},{components:[{internalType:"enum SessionLib.LimitType",name:"limitType",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"period",type:"uint256"}],internalType:"struct SessionLib.UsageLimit",name:"limit",type:"tuple"}],internalType:"struct SessionLib.Constraint[]",name:"constraints",type:"tuple[]"}],internalType:"struct SessionLib.CallSpec[]",name:"callPolicies",type:"tuple[]"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"maxValuePerUse",type:"uint256"},{components:[{internalType:"enum SessionLib.LimitType",name:"limitType",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"period",type:"uint256"}],internalType:"struct SessionLib.UsageLimit",name:"valueLimit",type:"tuple"}],internalType:"struct SessionLib.TransferSpec[]",name:"transferPolicies",type:"tuple[]"}],indexed:!1,internalType:"struct SessionLib.SessionSpec",name:"sessionSpec",type:"tuple"}],name:"SessionCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"bytes32",name:"sessionHash",type:"bytes32"}],name:"SessionRevoked",type:"event"},{inputs:[{components:[{internalType:"address",name:"signer",type:"address"},{internalType:"uint256",name:"expiresAt",type:"uint256"},{components:[{internalType:"enum SessionLib.LimitType",name:"limitType",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"period",type:"uint256"}],internalType:"struct SessionLib.UsageLimit",name:"feeLimit",type:"tuple"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes4",name:"selector",type:"bytes4"},{internalType:"uint256",name:"maxValuePerUse",type:"uint256"},{components:[{internalType:"enum SessionLib.LimitType",name:"limitType",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"period",type:"uint256"}],internalType:"struct SessionLib.UsageLimit",name:"valueLimit",type:"tuple"},{components:[{internalType:"enum SessionLib.Condition",name:"condition",type:"uint8"},{internalType:"uint64",name:"index",type:"uint64"},{internalType:"bytes32",name:"refValue",type:"bytes32"},{components:[{internalType:"enum SessionLib.LimitType",name:"limitType",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"period",type:"uint256"}],internalType:"struct SessionLib.UsageLimit",name:"limit",type:"tuple"}],internalType:"struct SessionLib.Constraint[]",name:"constraints",type:"tuple[]"}],internalType:"struct SessionLib.CallSpec[]",name:"callPolicies",type:"tuple[]"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"maxValuePerUse",type:"uint256"},{components:[{internalType:"enum SessionLib.LimitType",name:"limitType",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"period",type:"uint256"}],internalType:"struct SessionLib.UsageLimit",name:"valueLimit",type:"tuple"}],internalType:"struct SessionLib.TransferSpec[]",name:"transferPolicies",type:"tuple[]"}],internalType:"struct SessionLib.SessionSpec",name:"sessionSpec",type:"tuple"}],name:"createSession",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"smartAccount",type:"address"}],name:"isInitialized",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"data",type:"bytes"}],name:"onInstall",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes",name:"data",type:"bytes"}],name:"onUninstall",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"sessionHash",type:"bytes32"}],name:"revokeKey",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32[]",name:"sessionHashes",type:"bytes32[]"}],name:"revokeKeys",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{components:[{internalType:"address",name:"signer",type:"address"},{internalType:"uint256",name:"expiresAt",type:"uint256"},{components:[{internalType:"enum SessionLib.LimitType",name:"limitType",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"period",type:"uint256"}],internalType:"struct SessionLib.UsageLimit",name:"feeLimit",type:"tuple"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes4",name:"selector",type:"bytes4"},{internalType:"uint256",name:"maxValuePerUse",type:"uint256"},{components:[{internalType:"enum SessionLib.LimitType",name:"limitType",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"period",type:"uint256"}],internalType:"struct SessionLib.UsageLimit",name:"valueLimit",type:"tuple"},{components:[{internalType:"enum SessionLib.Condition",name:"condition",type:"uint8"},{internalType:"uint64",name:"index",type:"uint64"},{internalType:"bytes32",name:"refValue",type:"bytes32"},{components:[{internalType:"enum SessionLib.LimitType",name:"limitType",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"period",type:"uint256"}],internalType:"struct SessionLib.UsageLimit",name:"limit",type:"tuple"}],internalType:"struct SessionLib.Constraint[]",name:"constraints",type:"tuple[]"}],internalType:"struct SessionLib.CallSpec[]",name:"callPolicies",type:"tuple[]"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"maxValuePerUse",type:"uint256"},{components:[{internalType:"enum SessionLib.LimitType",name:"limitType",type:"uint8"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"period",type:"uint256"}],internalType:"struct SessionLib.UsageLimit",name:"valueLimit",type:"tuple"}],internalType:"struct SessionLib.TransferSpec[]",name:"transferPolicies",type:"tuple[]"}],internalType:"struct SessionLib.SessionSpec",name:"spec",type:"tuple"}],name:"sessionState",outputs:[{components:[{internalType:"enum SessionLib.Status",name:"status",type:"uint8"},{internalType:"uint256",name:"feesRemaining",type:"uint256"},{components:[{internalType:"uint256",name:"remaining",type:"uint256"},{internalType:"address",name:"target",type:"address"},{internalType:"bytes4",name:"selector",type:"bytes4"},{internalType:"uint256",name:"index",type:"uint256"}],internalType:"struct SessionLib.LimitState[]",name:"transferValue",type:"tuple[]"},{components:[{internalType:"uint256",name:"remaining",type:"uint256"},{internalType:"address",name:"target",type:"address"},{internalType:"bytes4",name:"selector",type:"bytes4"},{internalType:"uint256",name:"index",type:"uint256"}],internalType:"struct SessionLib.LimitState[]",name:"callValue",type:"tuple[]"},{components:[{internalType:"uint256",name:"remaining",type:"uint256"},{internalType:"address",name:"target",type:"address"},{internalType:"bytes4",name:"selector",type:"bytes4"},{internalType:"uint256",name:"index",type:"uint256"}],internalType:"struct SessionLib.LimitState[]",name:"callParams",type:"tuple[]"}],internalType:"struct SessionLib.SessionState",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"bytes32",name:"sessionHash",type:"bytes32"}],name:"sessionStatus",outputs:[{internalType:"enum SessionLib.Status",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"bytes",name:"",type:"bytes"}],name:"validateSignature",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"bytes32",name:"signedHash",type:"bytes32"},{components:[{internalType:"uint256",name:"txType",type:"uint256"},{internalType:"uint256",name:"from",type:"uint256"},{internalType:"uint256",name:"to",type:"uint256"},{internalType:"uint256",name:"gasLimit",type:"uint256"},{internalType:"uint256",name:"gasPerPubdataByteLimit",type:"uint256"},{internalType:"uint256",name:"maxFeePerGas",type:"uint256"},{internalType:"uint256",name:"maxPriorityFeePerGas",type:"uint256"},{internalType:"uint256",name:"paymaster",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256[4]",name:"reserved",type:"uint256[4]"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bytes",name:"signature",type:"bytes"},{internalType:"bytes32[]",name:"factoryDeps",type:"bytes32[]"},{internalType:"bytes",name:"paymasterInput",type:"bytes"},{internalType:"bytes",name:"reservedDynamic",type:"bytes"}],internalType:"struct Transaction",name:"transaction",type:"tuple"}],name:"validateTransaction",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}];var w;(function(e){e[e.Unlimited=0]="Unlimited",e[e.Lifetime=1]="Lifetime",e[e.Allowance=2]="Allowance"})(w||(w={}));w.Unlimited;w.Lifetime;var M;(function(e){e[e.Unconstrained=0]="Unconstrained",e[e.Equal=1]="Equal",e[e.Greater=2]="Greater",e[e.Less=3]="Less",e[e.GreaterEqual=4]="GreaterEqual",e[e.LessEqual=5]="LessEqual",e[e.NotEqual=6]="NotEqual"})(M||(M={}));var j;(function(e){e[e.NotInitialized=0]="NotInitialized",e[e.Active=1]="Active",e[e.Closed=2]="Closed"})(j||(j={}));const ke=e=>{const t=e.timestamp||BigInt(Math.floor(Date.now()/1e3)),n=T(e.target.toLowerCase()),i=c=>c.limitType===w.Allowance?t/c.period:0n,a=()=>e.sessionConfig.transferPolicies.find(c=>c.target===n),s=()=>e.sessionConfig.callPolicies.find(c=>c.target===n&&c.selector==e.selector),u=!!e.selector,r=u?s():a();if(!r)throw new Error("Transaction does not fit any policy");return[i(e.sessionConfig.feeLimit),i(r.valueLimit),...u?r.constraints.map(c=>i(c.limit)):[]]},Fe=()=>X({abi:je,name:"createSession"}).inputs[0],Ve=e=>{const t=e.slice(0,10);if(t.length===10)return t},ze=e=>F([Fe(),{type:"uint64[]"}],[e.sessionConfig,ke({sessionConfig:e.sessionConfig,target:e.to,selector:e.callData?Ve(e.callData):void 0,timestamp:e.timestamp})]);function B(e){return!!(e.type==="eip712"||"customSignature"in e&&e.customSignature||"paymaster"in e&&e.paymaster||"paymasterInput"in e&&e.paymasterInput||"gasPerPubdata"in e&&typeof e.gasPerPubdata=="bigint"||"factoryDeps"in e&&e.factoryDeps)}function qe(e){const{chainId:t,to:n,from:i,paymaster:a,paymasterInput:s}=e;if(!B(e))throw new W;if(!t||t<=0)throw new Y({chainId:t});if(n&&!P(n))throw new v({address:n});if(i&&!P(i))throw new v({address:i});if(a&&!P(a))throw new v({address:a});if(a&&!s)throw new E("`paymasterInput` must be provided when `paymaster` is defined");if(!a&&s)throw new E("`paymaster` must be provided when `paymasterInput` is defined")}class W extends E{constructor(){super(["Transaction is not an EIP712 transaction.","","Transaction must:",'  - include `type: "eip712"`',"  - include one of the following: `customSignature`, `paymaster`, `paymasterInput`, `gasPerPubdata`, `factoryDeps`"].join(`
`)),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"InvalidEip712TransactionError"})}}const Ge=50000n,He=e=>{qe(e);const t=Ke(e);return{domain:{name:"zkSync",version:"2",chainId:e.chainId},types:{Transaction:[{name:"txType",type:"uint256"},{name:"from",type:"uint256"},{name:"to",type:"uint256"},{name:"gasLimit",type:"uint256"},{name:"gasPerPubdataByteLimit",type:"uint256"},{name:"maxFeePerGas",type:"uint256"},{name:"maxPriorityFeePerGas",type:"uint256"},{name:"paymaster",type:"uint256"},{name:"nonce",type:"uint256"},{name:"value",type:"uint256"},{name:"data",type:"bytes"},{name:"factoryDeps",type:"bytes32[]"},{name:"paymasterInput",type:"bytes"}]},primaryType:"Transaction",message:t}};function Ke(e){const{gas:t,nonce:n,to:i,from:a,value:s,maxFeePerGas:u,maxPriorityFeePerGas:r,factoryDeps:o,paymaster:c,paymasterInput:l,gasPerPubdata:y,data:h}=e;return{txType:113n,from:BigInt(a),to:i?BigInt(i):0n,gasLimit:t??0n,gasPerPubdataByteLimit:y??Ge,maxFeePerGas:u??0n,maxPriorityFeePerGas:r??0n,paymaster:c?BigInt(c):0n,nonce:n?BigInt(n):0n,value:s??0n,data:h||"0x0",factoryDeps:(o==null?void 0:o.map(m=>_(Q(m))))??[],paymasterInput:l||"0x"}}function Be(e){const{address:t,signTransaction:n}=e;return{...ee({address:t,async signTransaction(a){const s={...a,from:this.address,type:"eip712"},u=He(s),r=te(u);return ne({...s,customSignature:await n({hash:r,to:s.to,callData:s.data})})},sign:async()=>{throw new Error("account.sign not supported for SSO Session Client")},signMessage:async()=>{throw new Error("account.signMessage not supported for SSO Session Client")},signTypedData:async()=>{throw new Error("account.signTypedData not supported for SSO Session Client")}}),source:"ssoSessionAccount"}}const I="0x"+"1b".padStart(65*2,"0");function We(e){return{prepareTransactionRequest:async t=>("customSignature"in t||(t.customSignature=S({sessionKeySignedHash:I,sessionContract:e.contracts.session,sessionConfig:e.sessionConfig,to:t.to,callData:t.data})),await V(e,{...t,type:"eip712"})),estimateContractGas:t=>{if(!("customSignature"in t)){const n=ae({abi:t.abi,functionName:t.functionName,args:t.args||[]});t.customSignature=S({sessionKeySignedHash:I,sessionContract:e.contracts.session,sessionConfig:e.sessionConfig,to:t.address,callData:n})}return se(e,t)},estimateGas:async t=>("customSignature"in t||(t.customSignature=S({sessionKeySignedHash:I,sessionContract:e.contracts.session,sessionConfig:e.sessionConfig,to:t.to,callData:t.data})),await ie(e,t))}}async function A(e,t,n,i=void 0){if(i&&!n.paymaster&&!n.paymasterInput){const a=await i({chainId:e,from:t,data:n.data,gas:n.gas??0n,gasPrice:n.gasPrice??0n,gasPerPubdata:n.gasPerPubdata??0n,maxFeePerGas:n.maxFeePerGas??0n,maxPriorityFeePerGas:n.maxPriorityFeePerGas??0n,nonce:n.nonce??0,to:n.to??"0x0",value:n.value??0n});return{...n,paymaster:a.paymaster,paymasterInput:a.paymasterInput,gas:a.gas??n.gas,maxFeePerGas:a.maxFeePerGas??n.maxFeePerGas,maxPriorityFeePerGas:a.maxPriorityFeePerGas??n.maxPriorityFeePerGas,gasPerPubdata:a.gasPerPubdata??n.gasPerPubdata,from:t,chainId:e}}return{...n,from:t,chainId:e}}async function Je(e,t){var c;const{account:n=e.account,chain:i=e.chain,...a}=t;if(!n)throw new Error("Account not found.");const s=re(n);$e(t);const u=await k(e,V,"prepareTransactionRequest")({account:s,chain:i,nonceManager:s.nonceManager,...a}),r=(c=i==null?void 0:i.serializers)==null?void 0:c.transaction,o=await s.signTransaction(u,{serializer:r});return await k(e,z,"sendRawTransaction")({serializedTransaction:o})}function k(e,t,n){const i=e[t.name];if(typeof i=="function")return i;const a=e[n];return typeof a=="function"?a:s=>t(e,s)}function $e(e){if(!B(e))throw new W;oe(e)}function Ze(e){return{deployContract:t=>ye(e,t),getAddresses:()=>de(e),getChainId:()=>le(e),sendRawTransaction:t=>z(e,t),sendTransaction:async t=>{var o,c,l,y,h;const n=Object.assign({},t);if("eip712Meta"in n){const m=n.eip712Meta;n.gasPerPubdata=m.gasPerPubdata?BigInt(m.gasPerPubdata):void 0,n.factoryDeps=m.factoryDeps,n.customSignature=m.customSignature,n.paymaster=(o=m.paymasterParams)==null?void 0:o.paymaster,n.paymasterInput=(c=m.paymasterParams)!=null&&c.paymasterInput?he(new Uint8Array((l=m.paymasterParams)==null?void 0:l.paymasterInput)):void 0,delete n.eip712Meta}const{chainId:i,...a}=await A(e.chain.id,e.account.address,n,e.paymasterHandler),s=(y=e.chain)==null?void 0:y.formatters,r={...(((h=s==null?void 0:s.transaction)==null?void 0:h.format)||fe)(a),type:"eip712"};return await Je(e,r)},signMessage:t=>pe(e,t),signTransaction:async t=>{const{chainId:n,...i}=await A(e.chain.id,e.account.address,t,e.paymasterHandler);return me(e,{...t,unformattedTxWithPaymaster:i})},signTypedData:t=>ce(e,t),writeContract:t=>ue(e,t)}}const S=e=>F([{type:"bytes",name:"sessionKeySignedHash"},{type:"address",name:"sessionContract"},{type:"bytes",name:"validatorData"}],[e.sessionKeySignedHash,e.sessionContract,ze({sessionConfig:e.sessionConfig,to:e.to,callData:e.callData,timestamp:e.timestamp})]);function Xe(e){const t={...e,address:T(e.address),key:e.key||"zksync-sso-session-wallet",name:e.name||"ZKsync SSO Session Client"},n=async()=>{const u=await Se({chain:t.chain,transport:t.transport}).request({method:"config_getCurrentTimestamp"});return BigInt(u)},i=Be({address:t.address,signTransaction:async({hash:s,to:u,callData:r})=>{const o=t.chain.id===Te.id?await n():void 0,l=await we(t.sessionKey).sign({hash:s});return S({sessionKeySignedHash:l,sessionContract:t.contracts.session,sessionConfig:t.sessionConfig,to:u,callData:r,timestamp:o})}});return ge({...t,account:i,type:"walletClient"}).extend(()=>({sessionKey:t.sessionKey,sessionConfig:t.sessionConfig,contracts:t.contracts,paymasterHandler:t.paymasterHandler})).extend(be).extend(We).extend(Ze)}const Ye={object:{read:e=>{try{return JSON.parse(e)}catch{throw new Error("Failed to parse JSON")}},write:e=>JSON.stringify(e)}};class b{constructor(t,n,i={}){Object.defineProperty(this,"key",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"defaultValue",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"storage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"serializer",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"onChangeCallback",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.key=t,this.defaultValue=n,this.storage=i.storage||localStorage,this.serializer=i.serializer||Ye.object,i.onChange&&(this.onChangeCallback=i.onChange)}get(){const t=this.storage.getItem(this.key);if(t!==null)try{return this.serializer.read(t)}catch{return this.defaultValue}return this.defaultValue}set(t){const n=this.get(),i=this.serializer.write(t);this.storage.setItem(this.key,i),this.notifyChange(t,n)}remove(){const t=this.get();this.storage.removeItem(this.key),this.notifyChange(this.defaultValue,t)}notifyChange(t,n){this.onChangeCallback&&this.onChangeCallback(t,n)}}Object.defineProperty(b,"scopedStorageKey",{enumerable:!0,configurable:!0,writable:!0,value:e=>`ZKAccount::${e}`});const Qe=e=>{const t=n=>({limitType:n.limitType,limit:BigInt(n.limit),period:BigInt(n.period)});return{...e,expiresAt:BigInt(e.expiresAt),feeLimit:t(e.feeLimit),transferPolicies:e.transferPolicies.map(n=>({...n,maxValuePerUse:BigInt(n.maxValuePerUse),valueLimit:t(n.valueLimit)})),callPolicies:e.callPolicies.map(n=>({...n,maxValuePerUse:BigInt(n.maxValuePerUse),valueLimit:t(n.valueLimit),constraints:n.constraints.map(i=>({...i,index:BigInt(i.index),limit:t(i.limit)}))}))}};class et{constructor({metadata:t,communicator:n,updateListener:i,session:a,chains:s,transports:u,paymasterHandler:r}){if(Object.defineProperty(this,"getMetadata",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"communicator",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"updateListener",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"chains",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"transports",{enumerable:!0,configurable:!0,writable:!0,value:{}}),Object.defineProperty(this,"sessionParameters",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"paymasterHandler",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_account",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"_chainsInfo",{enumerable:!0,configurable:!0,writable:!0,value:new b(b.scopedStorageKey("chainsInfo"),[])}),Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"clearState",{enumerable:!0,configurable:!0,writable:!0,value:()=>{this._account.remove(),this._chainsInfo.remove()}}),!s.length)throw new Error("At least one chain must be included in the config");this.getMetadata=t,this.communicator=n,this.updateListener=i,this.sessionParameters=a,this.chains=s,this.transports=u||{},this.paymasterHandler=r,this._account=new b(b.scopedStorageKey("account"),null,{onChange:o=>{o?(this.updateListener.onAccountsUpdate([o.address]),this.updateListener.onChainUpdate(o.activeChainId),this.createWalletClient()):this.updateListener.onAccountsUpdate([])}});try{this.account&&this.createWalletClient()}catch(o){console.error("Failed to create wallet client",o),console.error("Logging out to prevent crash loop"),this.clearState()}}get walletClient(){var t;return(t=this.client)==null?void 0:t.instance}getClient(t){const n=(t==null?void 0:t.chainId)||this.chain.id;if(!this.chains.find(a=>a.id===n))throw new Error(`Chain with id ${n} is not supported`);if(!this.walletClient)throw new Error("Wallet client is not created");return this.walletClient}get account(){const t=this._account.get();if(!t)return null;const n=this.chains.find(i=>i.id===t.activeChainId);return{...t,activeChainId:(n==null?void 0:n.id)||this.chains[0].id}}get session(){var t;return(t=this.account)==null?void 0:t.session}get chainsInfo(){return this._chainsInfo.get()}get accounts(){return this.account?[this.account.address]:[]}get chain(){var n;const t=((n=this.account)==null?void 0:n.activeChainId)||this.chains[0].id;return this.chains.find(i=>i.id===t)}createWalletClient(){const t=this.session,n=this.chain,i=this.chainsInfo.find(a=>a.id===n.id);if(!this.account)throw new Error("Account is not set");if(!i)throw new Error(`Chain info for ${n} wasn't set during handshake`);t?this.client={type:"session",instance:Xe({address:this.account.address,sessionKey:t.sessionKey,sessionConfig:Qe(t.sessionConfig),contracts:i.contracts,chain:n,transport:this.transports[n.id]||Pe(),paymasterHandler:this.paymasterHandler})}:this.client={type:"auth-server",instance:ve({key:"zksync-sso-auth-server-wallet",account:this.account.address,chain:n,transport:Ie({request:this.request.bind(this)})})}}async handshake(){let t,n={name:"Unknown DApp",icon:null,configData:{}};try{n=this.getMetadata()}catch(s){console.error("Failed to get website metadata. Proceeding with default one.",s)}if(this.sessionParameters)try{t=await this.sessionParameters()}catch(s){console.error("Failed to get session data. Proceeding connection with no session.",s)}const a=(await this.sendRpcRequest({method:"eth_requestAccounts",params:{metadata:n,sessionPreferences:t}})).content.result;return this._chainsInfo.set(a.chainsInfo),this._account.set({address:a.account.address,activeChainId:a.account.activeChainId||this.chain.id,session:a.account.session}),this.accounts}switchChain(t){const n=this.chains.find(a=>a.id===t);return this.chainsInfo.find(a=>a.id===t)?n?(n.id===this.chain.id||this._account.set({...this.account,activeChainId:n.id}),!0):(console.error(`Chain ${t} is missing in the configuration`),!1):(console.error(`Chain ${t} is not supported or chain info was not set during handshake`),!1)}async request(t){const n=await this.tryLocalHandling(t);return n!==void 0?n:(await this.sendRpcRequest(t)).content.result}async disconnect(){this.clearState()}async tryLocalHandling(t){const n=this.walletClient,i=this.client;switch(t.method){case"eth_estimateGas":{if(!n)return;const a=t.params;return await n.request({method:t.method,params:a})}case"eth_sendTransaction":{if((i==null?void 0:i.type)!=="session")return;const s=t.params[0];return await i.instance.sendTransaction(s)}case"wallet_switchEthereumChain":throw new Error("Chain switching is not supported yet");case"wallet_getCapabilities":{const a=this.chainsInfo.find(s=>s.id===this.chain.id);if(!a)throw new Error("Chain info is not set");return{[this.chain.id]:a.capabilities}}case"eth_accounts":return this.accounts;default:return}}async sendRpcRequest(t){if(await this.communicator.ready(),t.method==="eth_sendTransaction"){const s=t.params[0];if(s){const{chainId:u,...r}=await A(this.chain.id,s.from,s,this.paymasterHandler);t={method:t.method,params:[r]}}}const n=this.createRequestMessage({action:t,chainId:this.chain.id}),i=await this.communicator.postRequestAndWaitForResponse(n),a=i.content;if("error"in a)throw a.error;return i}createRequestMessage(t){return{id:crypto.randomUUID(),content:t}}}const tt="https://auth-test.zksync.dev/confirm";class nt extends J{constructor({metadata:t,chains:n,transports:i,session:a,authServerUrl:s,paymasterHandler:u}){super(),Object.defineProperty(this,"isZksyncSso",{enumerable:!0,configurable:!0,writable:!0,value:!0}),Object.defineProperty(this,"signer",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"updateListener",{enumerable:!0,configurable:!0,writable:!0,value:{onAccountsUpdate:o=>{this.emit("accountsChanged",o)},onChainUpdate:o=>{this.emit("chainChanged",o)}}});const r=new Ue(s||tt);this.signer=new et({metadata:()=>({name:(t==null?void 0:t.name)||De()||"Unknown DApp",icon:(t==null?void 0:t.icon)||Me(),configData:(t==null?void 0:t.configData)||{}}),updateListener:this.updateListener,communicator:r,chains:n,transports:i,session:typeof a=="object"?()=>a:a,paymasterHandler:u})}get chain(){return this.signer.chain}get connected(){return this.signer.accounts.length>0}getClient(t){return this.signer.getClient(t)}async request(t){try{switch(t.method){case"eth_requestAccounts":return await this.handshake();case"personal_sign":case"eth_accounts":case"eth_estimateGas":case"eth_signTransaction":case"eth_sendTransaction":case"eth_signTypedData_v4":case"wallet_addEthereumChain":case"wallet_switchEthereumChain":case"wallet_watchAsset":case"wallet_getCapabilities":case"wallet_sendCalls":case"wallet_showCallsStatus":{if(!this.connected)throw g.provider.unauthorized("Must call 'eth_requestAccounts' before other methods");return await this.signer.request(t)}case"eth_chainId":case"net_version":return _(this.chain.id)}throw g.rpc.methodNotSupported(`Method ${t.method} is not supported.`)}catch(n){return Promise.reject(Oe(n,t.method))}}async handshake(){if(this.connected)return this.emit("connect",{chainId:this.chain.id}),this.signer.accounts;const t=await this.signer.handshake();return this.emit("connect",{chainId:this.chain.id}),t}async disconnect(){this.signer.disconnect(),this.emit("disconnect",g.provider.disconnected("User initiated disconnection"))}}const rt=e=>{let t,n,i,a;const s=()=>{t&&(n&&(t.removeListener("accountsChanged",n),n=void 0),i&&(t.removeListener("chainChanged",i),i=void 0),a&&(t.removeListener("disconnect",a),a=void 0)),t=void 0};return $(u=>({icon:"https://zksync.io/favicon.ico",id:"zksync-sso",name:"ZKsync",type:"zksync-sso",async connect({chainId:r}={}){try{const o=await this.getProvider(),c=(await o.request({method:"eth_requestAccounts"})).map(y=>T(y));n||(n=this.onAccountsChanged.bind(this),o.on("accountsChanged",n)),i||(i=this.onChainChanged.bind(this),o.on("chainChanged",i)),a||(a=this.onDisconnect.bind(this),o.on("disconnect",a));let l=await this.getChainId();if(r&&l!==r){const y=await this.switchChain({chainId:r}).catch(h=>{if(h.code===N.code)throw h;return{id:l}});l=(y==null?void 0:y.id)??l}return{accounts:c,chainId:l}}catch(o){throw console.error(`Error connecting to ${this.name}`,o),/(user closed modal|accounts received is empty|user denied account|request rejected)/i.test(o.message)?new N(o):o}},async disconnect(){(await this.getProvider()).disconnect(),s()},async getAccounts(){return(await(await this.getProvider()).request({method:"eth_accounts"})).map(o=>T(o))},async getChainId(){const o=await(await this.getProvider()).request({method:"eth_chainId"});return o?Number(o):u.chains[0].id},async getClient(r){if(!t)throw new Error("Wallet provider not initialized");return t.getClient(r)},async getProvider(){var r,o,c;return t||(t=new nt({metadata:{name:(r=e.metadata)==null?void 0:r.name,icon:(o=e.metadata)==null?void 0:o.icon,configData:(c=e.metadata)==null?void 0:c.configData},authServerUrl:e.authServerUrl,session:e.session,transports:u.transports,chains:u.chains,paymasterHandler:e.paymasterHandler})),t},async isAuthorized(){try{return!!(await this.getAccounts()).length}catch{return!1}},async switchChain({chainId:r}){const o=u.chains.find(c=>c.id===r);if(!o)throw new R(new Z);try{return await(await this.getProvider()).request({method:"wallet_switchEthereumChain",params:[{chainId:_(r)}]}),o}catch(c){throw new R(c)}},onAccountsChanged(r){r.length&&u.emitter.emit("change",{accounts:r.map(o=>T(o))})},onChainChanged(r){u.emitter.emit("change",{chainId:Number(r)})},async onDisconnect(r){u.emitter.emit("disconnect"),!(r instanceof x&&r.code===4900)&&console.error("Account disconnected",r)}}))};export{Ue as P,rt as z};
